//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopClient.OrderContract {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessOrderItem", Namespace="http://schemas.datacontract.org/2004/07/ServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class BusinessOrderItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GoodCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderItemSumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GoodCount {
            get {
                return this.GoodCountField;
            }
            set {
                if ((this.GoodCountField.Equals(value) != true)) {
                    this.GoodCountField = value;
                    this.RaisePropertyChanged("GoodCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoodId {
            get {
                return this.GoodIdField;
            }
            set {
                if ((this.GoodIdField.Equals(value) != true)) {
                    this.GoodIdField = value;
                    this.RaisePropertyChanged("GoodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderItemSum {
            get {
                return this.OrderItemSumField;
            }
            set {
                if ((this.OrderItemSumField.Equals(value) != true)) {
                    this.OrderItemSumField = value;
                    this.RaisePropertyChanged("OrderItemSum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderContract.IOrderContract", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IOrderContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContract/AddOrder", ReplyAction="http://tempuri.org/IOrderContract/AddOrderResponse")]
        string AddOrder(ShopClient.OrderContract.BusinessOrderItem[] businessOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContract/AddOrder", ReplyAction="http://tempuri.org/IOrderContract/AddOrderResponse")]
        System.Threading.Tasks.Task<string> AddOrderAsync(ShopClient.OrderContract.BusinessOrderItem[] businessOrder);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderContractChannel : ShopClient.OrderContract.IOrderContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderContractClient : System.ServiceModel.ClientBase<ShopClient.OrderContract.IOrderContract>, ShopClient.OrderContract.IOrderContract {
        
        public OrderContractClient() {
        }
        
        public OrderContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddOrder(ShopClient.OrderContract.BusinessOrderItem[] businessOrder) {
            return base.Channel.AddOrder(businessOrder);
        }
        
        public System.Threading.Tasks.Task<string> AddOrderAsync(ShopClient.OrderContract.BusinessOrderItem[] businessOrder) {
            return base.Channel.AddOrderAsync(businessOrder);
        }
    }
}
