//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopClient.GoodsContract {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessGood", Namespace="http://schemas.datacontract.org/2004/07/ServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class BusinessGood : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GoodCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GoodCount {
            get {
                return this.GoodCountField;
            }
            set {
                if ((this.GoodCountField.Equals(value) != true)) {
                    this.GoodCountField = value;
                    this.RaisePropertyChanged("GoodCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoodId {
            get {
                return this.GoodIdField;
            }
            set {
                if ((this.GoodIdField.Equals(value) != true)) {
                    this.GoodIdField = value;
                    this.RaisePropertyChanged("GoodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodName {
            get {
                return this.GoodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodNameField, value) != true)) {
                    this.GoodNameField = value;
                    this.RaisePropertyChanged("GoodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManufacturerName {
            get {
                return this.ManufacturerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerNameField, value) != true)) {
                    this.ManufacturerNameField = value;
                    this.RaisePropertyChanged("ManufacturerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GoodsContract.IGoodsContract")]
    public interface IGoodsContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGoodsContract/GetGoods", ReplyAction="http://tempuri.org/IGoodsContract/GetGoodsResponse")]
        ShopClient.GoodsContract.BusinessGood[] GetGoods();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGoodsContract/GetGoods", ReplyAction="http://tempuri.org/IGoodsContract/GetGoodsResponse")]
        System.Threading.Tasks.Task<ShopClient.GoodsContract.BusinessGood[]> GetGoodsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGoodsContract/Get", ReplyAction="http://tempuri.org/IGoodsContract/GetResponse")]
        ShopClient.GoodsContract.BusinessGood Get(int GoodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGoodsContract/Get", ReplyAction="http://tempuri.org/IGoodsContract/GetResponse")]
        System.Threading.Tasks.Task<ShopClient.GoodsContract.BusinessGood> GetAsync(int GoodId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGoodsContractChannel : ShopClient.GoodsContract.IGoodsContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GoodsContractClient : System.ServiceModel.ClientBase<ShopClient.GoodsContract.IGoodsContract>, ShopClient.GoodsContract.IGoodsContract {
        
        public GoodsContractClient() {
        }
        
        public GoodsContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GoodsContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GoodsContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GoodsContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ShopClient.GoodsContract.BusinessGood[] GetGoods() {
            return base.Channel.GetGoods();
        }
        
        public System.Threading.Tasks.Task<ShopClient.GoodsContract.BusinessGood[]> GetGoodsAsync() {
            return base.Channel.GetGoodsAsync();
        }
        
        public ShopClient.GoodsContract.BusinessGood Get(int GoodId) {
            return base.Channel.Get(GoodId);
        }
        
        public System.Threading.Tasks.Task<ShopClient.GoodsContract.BusinessGood> GetAsync(int GoodId) {
            return base.Channel.GetAsync(GoodId);
        }
    }
}
